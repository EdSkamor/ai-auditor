[project]
name = "ai-auditor"
version = "1.0.0"
description = "Production AI Auditor system for invoice validation and audit support"
authors = [{ name = "EdSkamor" }]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.111",
    "uvicorn[standard]>=0.30",
    "pydantic>=2",
    "pandas>=2.2",
    "numpy>=1.24",
    "openpyxl>=3.1",
    "chardet>=5.2",
    "unidecode>=1.3",
    "python-multipart>=0.0.20",
    "pdfplumber>=0.11",
    "pypdf>=5.0",
    "torch>=2.0",
    "transformers>=4.30",
    "peft>=0.4",
    "bitsandbytes>=0.41",
    "accelerate>=0.20",
    "pytesseract>=0.3.10",
    "easyocr>=1.7.0",
    "rapidfuzz>=3.0",
    "streamlit>=1.28",
    "reportlab>=4.0",
    "xlsxwriter>=3.1"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "pytest-asyncio>=0.21",
    "black>=23.0",
    "isort>=5.12",
    "flake8>=6.0",
    "mypy>=1.5"
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3"
]

[project.scripts]
ai-auditor = "cli.main:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["core", "cli", "tools", "ui", "reports"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["core", "cli", "tools", "ui", "reports"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.pre-commit]
repos = [
  { repo = "https://github.com/psf/black", rev = "24.1.0", hooks = [{ id = "black" }] },
  { repo = "https://github.com/PyCQA/isort", rev = "6.0.0", hooks = [{ id = "isort" }] },
  { repo = "https://github.com/PyCQA/flake8", rev = "7.0.0", hooks = [{ id = "flake8" }] }
]
